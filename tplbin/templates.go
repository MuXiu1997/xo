// Code generated for package tplbin by go-bindata DO NOT EDIT. (@generated)
// sources:
// templates/mssql.foreignkey.go.tpl
// templates/mssql.index.go.tpl
// templates/mssql.query.go.tpl
// templates/mssql.querytype.go.tpl
// templates/mssql.type.go.tpl
// templates/mysql.enum.go.tpl
// templates/mysql.foreignkey.go.tpl
// templates/mysql.index.go.tpl
// templates/mysql.proc.go.tpl
// templates/mysql.query.go.tpl
// templates/mysql.querytype.go.tpl
// templates/mysql.type.go.tpl
// templates/oracle.foreignkey.go.tpl
// templates/oracle.index.go.tpl
// templates/oracle.query.go.tpl
// templates/oracle.querytype.go.tpl
// templates/oracle.type.go.tpl
// templates/postgres.enum.go.tpl
// templates/postgres.foreignkey.go.tpl
// templates/postgres.index.go.tpl
// templates/postgres.proc.go.tpl
// templates/postgres.query.go.tpl
// templates/postgres.querytype.go.tpl
// templates/postgres.type.go.tpl
// templates/sqlite3.foreignkey.go.tpl
// templates/sqlite3.index.go.tpl
// templates/sqlite3.query.go.tpl
// templates/sqlite3.querytype.go.tpl
// templates/sqlite3.type.go.tpl
// templates/xo_db.go.tpl
// templates/xo_package.go.tpl
package tplbin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mssqlForeignkeyGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x4b\xcb\x2f\x4a\xcd\x4c\xcf\xcb\x4e\xad\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x36\x39\xe8\x59\x1a\x00\x00\x00"

func mssqlForeignkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mssqlForeignkeyGoTpl,
		"mssql.foreignkey.go.tpl",
	)
}

func mssqlForeignkeyGoTpl() (*asset, error) {
	bytes, err := mssqlForeignkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mssql.foreignkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mssqlIndexGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\xcb\xcc\x4b\x49\xad\xd0\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\xf7\x1c\xbf\x69\x15\x00\x00\x00"

func mssqlIndexGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mssqlIndexGoTpl,
		"mssql.index.go.tpl",
	)
}

func mssqlIndexGoTpl() (*asset, error) {
	bytes, err := mssqlIndexGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mssql.index.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mssqlQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x62\x80\xb5\x05\x15\x00\x00\x00"

func mssqlQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mssqlQueryGoTpl,
		"mssql.query.go.tpl",
	)
}

func mssqlQueryGoTpl() (*asset, error) {
	bytes, err := mssqlQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mssql.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mssqlQuerytypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\x2c\xa9\x2c\x48\xd5\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x88\x80\x86\xba\x19\x00\x00\x00"

func mssqlQuerytypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mssqlQuerytypeGoTpl,
		"mssql.querytype.go.tpl",
	)
}

func mssqlQuerytypeGoTpl() (*asset, error) {
	bytes, err := mssqlQuerytypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mssql.querytype.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mssqlTypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4d\x6f\xe3\x36\x10\x3d\xcb\x80\xff\xc3\xac\xb0\x40\xec\xd6\x2b\xa3\xd7\x00\x3e\x6c\x37\x5e\x34\x68\x36\x09\x12\xa7\xdd\x5b\x4c\x9b\xa3\x35\x1b\x89\x4c\x48\xca\x1b\x43\xd0\x7f\x2f\xf8\x21\x45\x92\x15\x47\x6e\x7a\x88\x14\x4b\x33\x8f\xc3\x99\x79\x6f\xa8\x3c\xff\x04\x1f\xd5\x46\x48\x0d\xa7\x33\x18\xd9\xff\x38\x49\x11\xa2\x4b\x73\x0d\x51\xca\x10\x42\x89\x2a\x84\x50\x3d\x25\x4a\x9b\x9f\x74\x15\x42\xf8\xfd\xea\x42\xfc\x08\xc7\xf0\xa9\x28\x86\x03\x0b\xa3\xc9\x2a\x41\x07\xb3\xde\x60\x4a\x20\xba\xf5\xf7\x85\x79\xe3\xae\x06\xb6\xe6\xc4\x62\x88\xbe\x88\x34\x45\xae\xdd\xc3\xe9\x14\xf2\xfc\xe5\x59\x69\x87\x89\xc2\x86\x81\x0d\xaf\x28\x40\xe2\xa3\x44\x85\x5c\x2b\x20\x20\xc5\x4f\x88\xa5\x48\xe1\x24\xcf\xcb\x78\x8a\xe2\x24\xf2\x18\x9c\x5a\x3c\xbd\x7b\xc4\x06\x86\xd2\x32\x5b\x6b\xc8\x9d\x99\x24\xfc\x07\x42\xf4\x95\x61\x42\x95\x75\x08\xea\xc6\x79\x0e\x12\x2d\x44\xb4\x30\xd7\xa2\x80\xe5\x3f\x4a\xf0\xd3\xd0\xc5\x9d\x98\xbf\x2c\xe5\xde\x3e\x5c\x42\xb5\xa5\xd6\xab\x66\x54\x65\x36\xae\x25\x4b\x89\xdc\xfd\x89\x3b\xfb\x78\x38\x08\xa6\x53\x78\x16\x10\xdb\x78\x86\x83\xe0\x1e\x9f\x99\xd2\x6a\x02\xf7\x14\x13\xd4\x48\x61\x25\x44\x62\x00\x2a\x2c\xeb\x97\xe7\x5d\x78\xd3\x29\xcc\xad\x3f\x50\xd4\x28\x53\xc6\x51\x19\x3b\xbd\x69\xe6\xc4\x2d\x02\x8c\xdb\x37\x94\x68\xb2\x22\x0a\xa3\xe1\x20\xce\xf8\x1a\x46\x26\xbf\xae\x6d\x8a\x02\x7e\xa9\x39\x8e\x3d\xfc\x68\x6c\xc3\x32\x49\x0d\x24\xea\x4c\x72\xa8\xfb\x44\x7e\x17\x3e\xd6\xe9\x14\xce\xfc\x66\x1e\xa5\xd8\x32\x6a\x82\xe2\xb1\x90\x29\xd1\x4c\xf0\xae\x00\x37\x44\xc1\x0a\x91\x43\x99\x05\x5b\xf8\x63\x83\xf5\xab\xbe\x19\xad\x5f\xe4\x25\xdc\x73\xae\x50\x6a\x60\xf6\xa6\xf6\xa2\xd3\xe2\xe8\x50\x1c\xe2\x88\xae\xe0\xfb\xd5\xd9\xef\x63\x40\x29\x85\xb4\x11\x6d\x89\x34\xbf\xdc\x93\xb2\x25\x58\x0c\x24\x91\x48\xe8\xce\xd5\x6a\x02\x2b\xc2\x92\xe1\x20\x60\x71\x67\xa6\x2d\x52\xb9\x39\x8b\xa4\xa2\x4b\xfc\x39\x0a\xdd\x16\x20\x26\x2c\x41\x7a\xda\x04\x55\xe1\x78\x38\x08\xea\xed\xe4\xa8\xfc\x8d\xf0\x8c\x24\xd7\x0f\xe0\xf8\x31\x9d\x82\x7a\x4a\x7c\x32\xe0\x29\x43\xb9\x9b\xc0\xa3\x6b\x3c\x78\xc0\x1d\xa4\x99\xd2\xb0\xc2\xb2\xb8\x74\x38\x08\xd6\x82\x2b\x0d\x4e\x53\x60\x06\xcb\xf3\xcb\xdb\xf9\xcd\x02\xce\x2f\x17\x57\x50\x67\x2f\x8c\x96\xf0\xab\x09\x7d\x99\xe7\xb0\x16\x89\x51\x27\x55\xa3\x67\xf9\x76\x0c\x7f\x7d\xbe\xb8\x9b\xdf\xb6\xed\xb7\x24\xe9\x34\x5f\x96\x89\x94\x19\x77\x21\x0f\x07\x81\x15\xb5\x91\x0b\x6a\x62\xc2\xb0\xac\x6b\x2e\x59\x65\xd6\xa4\xe6\x7e\x62\x2b\x33\x03\xba\x8a\xe6\xcf\xb8\x3e\xc6\x97\xc5\xd6\xf7\xc3\x0c\x38\x4b\xda\xe5\x29\xd3\x6e\x73\x8b\xda\x95\x03\xf9\x1a\x9d\x1c\xed\x97\x77\x06\x5a\x66\xe8\x64\xc0\x88\x65\xbf\xc2\x94\x05\x81\xd5\x0e\x18\x45\xae\x99\xde\xfd\x6f\xc5\xa9\x69\x4f\xd9\xe6\x47\x55\xeb\x90\xff\x7b\xcb\xd7\x81\x3d\xb6\xe4\x57\xae\xa2\xa7\x47\x96\xf4\x15\xbc\xde\x35\x96\xa8\x25\xc3\x2d\x02\x33\xe4\x60\xb4\x8a\x42\xa2\x8a\x2e\x88\xd2\x4e\x1e\xce\xe9\xe8\xe8\xd6\xa9\xd7\x9b\x70\xfa\x7a\x2b\x19\x39\xda\xdf\x06\xcc\xa0\xf5\xc2\xcf\xbd\x11\xa3\xe3\x3e\xdd\xe8\x87\xd2\x8b\xb4\x72\xa3\x53\x35\x51\xe1\x08\xa3\xfe\x99\x1d\x43\x18\x56\xdd\x7d\xf7\x48\x89\x46\xc8\xec\x6d\x5f\x86\xf7\xc7\x57\xf0\xa6\x0e\x3b\xc8\x2e\x1d\xee\x10\x62\xaf\xc4\x54\xa0\xe2\x27\xba\xa5\xc4\xa6\x4c\x1f\x5e\xd7\xe2\x2e\x31\x76\x1b\xa9\xc4\xd8\xe0\x02\x17\x1e\xd8\x8a\xb1\xaf\x6d\xb9\xb0\x9b\x4b\x8d\x25\x3b\x27\x57\xef\x25\x53\x22\x1f\xcc\x34\x15\xd2\x81\x33\xc1\xdb\xeb\x1a\x49\x29\x29\xb7\x27\x15\x77\xd7\x67\x9f\x17\xf3\xa6\x4a\xdc\xce\x17\xe0\x99\xdb\x50\x0a\x0b\x52\xd5\x3b\x9c\x40\x78\x80\xf3\xc1\x12\xfe\xfe\x63\x7e\x63\xa1\x3d\x40\xc3\xfa\x8b\x48\x5c\xb7\x7e\x74\x06\x6b\x91\x71\x7d\x50\x4b\xaa\x0d\xd5\x35\xe4\x9d\x22\x32\x81\x1e\x94\xb2\xf9\xfc\x6f\xa3\xe3\x5d\x4b\x76\x6b\xc4\x2d\xd9\x22\x28\xb2\xed\xe0\xcf\xfe\x31\xe6\x6d\xfe\x18\xb8\x4e\xf6\xb4\x5b\xb3\x3a\x28\x36\x5a\xb3\x61\x52\x71\xb1\xde\x81\x5d\x86\xd5\xe1\xc9\x9f\x57\xda\x53\xd0\xeb\x84\xd2\x44\x63\x6a\xbf\x16\x44\xca\xb4\xe1\x05\xcd\xd0\x6c\x33\x21\xeb\x07\x10\xb1\x3f\x66\x83\xd0\x1b\x94\xa0\x37\x84\xd7\xe5\xb3\xa5\x67\xd5\xa9\xd5\xd3\x70\x3f\x7f\xef\x38\x93\x1e\x73\x10\xec\x96\x9f\xc3\xea\x53\xd7\xe2\x97\x5e\xe8\x90\x94\xc3\x8a\xd2\x0d\x53\x57\x88\xb6\x40\x9c\xcd\x2f\xe6\x8b\x39\x7c\xbd\xb9\xfa\xd6\x54\x89\x9e\xec\xfe\xad\xdf\xe8\xef\x43\x88\x43\x14\xec\xe3\x7f\xd4\x18\xae\x3e\x21\x82\xee\x74\x96\x23\x73\x7f\x4e\xd6\x3f\x13\x87\x83\x7f\x03\x00\x00\xff\xff\x84\xb8\x34\x33\xb3\x0f\x00\x00"

func mssqlTypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mssqlTypeGoTpl,
		"mssql.type.go.tpl",
	)
}

func mssqlTypeGoTpl() (*asset, error) {
	bytes, err := mssqlTypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mssql.type.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlEnumGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x4b\xcd\x2b\xcd\xd5\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x04\x67\x3c\xbe\x14\x00\x00\x00"

func mysqlEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlEnumGoTpl,
		"mysql.enum.go.tpl",
	)
}

func mysqlEnumGoTpl() (*asset, error) {
	bytes, err := mysqlEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.enum.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlForeignkeyGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x4b\xcb\x2f\x4a\xcd\x4c\xcf\xcb\x4e\xad\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x36\x39\xe8\x59\x1a\x00\x00\x00"

func mysqlForeignkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlForeignkeyGoTpl,
		"mysql.foreignkey.go.tpl",
	)
}

func mysqlForeignkeyGoTpl() (*asset, error) {
	bytes, err := mysqlForeignkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.foreignkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlIndexGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func mysqlIndexGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlIndexGoTpl,
		"mysql.index.go.tpl",
	)
}

func mysqlIndexGoTpl() (*asset, error) {
	bytes, err := mysqlIndexGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.index.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlProcGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x28\xca\x4f\xd6\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x36\xb4\x6b\x70\x14\x00\x00\x00"

func mysqlProcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlProcGoTpl,
		"mysql.proc.go.tpl",
	)
}

func mysqlProcGoTpl() (*asset, error) {
	bytes, err := mysqlProcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.proc.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x62\x80\xb5\x05\x15\x00\x00\x00"

func mysqlQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlQueryGoTpl,
		"mysql.query.go.tpl",
	)
}

func mysqlQueryGoTpl() (*asset, error) {
	bytes, err := mysqlQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlQuerytypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\x2c\xa9\x2c\x48\xd5\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x88\x80\x86\xba\x19\x00\x00\x00"

func mysqlQuerytypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlQuerytypeGoTpl,
		"mysql.querytype.go.tpl",
	)
}

func mysqlQuerytypeGoTpl() (*asset, error) {
	bytes, err := mysqlQuerytypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.querytype.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlTypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xcd\x6e\xdb\x30\x10\x84\xcf\xf1\x53\x0c\x88\x02\x91\x0a\x58\xb9\xab\xc8\x21\x4d\x1b\xa0\x48\x7f\x82\x24\x05\x9a\x53\xa3\x58\x2b\x47\x85\x48\x3a\x4b\xba\x85\x41\xec\xbb\x17\xd4\x4f\xa2\xba\x45\xad\x83\x0e\x5e\x4b\xc3\xd1\xb7\xc3\x25\x43\x58\xe2\x95\x7b\xb4\xec\x91\x9f\x22\x69\x9f\x4c\xa1\x09\xd9\xe7\x58\x15\x31\x2b\x28\x26\xa7\xa0\xdc\x53\xe3\x7c\x7c\x2d\x1f\x14\xd4\xb7\x2f\x1f\xed\x5a\xa5\x58\x8a\x2c\x5a\x8a\x2f\x1e\x1a\xea\x28\xab\x47\xd2\x05\xb2\x9b\xfe\xff\x36\xae\x74\x35\x52\x47\xdf\x6c\xb8\xd6\x05\xef\x2e\x69\xd7\xb6\xcb\x4f\x91\x5d\x3d\x4b\x5d\x84\xc1\x5b\x57\xc8\xce\xad\xd6\x64\x7c\xab\x9d\x9c\x20\x84\x17\xa9\x77\x51\xe3\x68\xbc\xdc\x22\x44\xc0\xb4\x61\x72\x64\xbc\x43\x01\xb6\xbf\x50\xb1\xd5\x38\x0e\x61\xc8\x2d\x72\x9c\x75\x04\x53\x46\x98\xdf\x6d\xe8\x0f\x82\xf3\xbc\x5d\x79\x84\xd6\xc4\x85\x59\x13\xb2\x8b\x9a\x9a\xd2\x45\x3b\x00\xec\xa7\xec\xe5\xbf\x83\x0e\xe6\x21\xec\xa8\xed\xd1\xb8\x65\x08\x60\x6a\x83\x64\xb7\xb1\x8a\xe0\xfe\x87\xb3\x26\x57\x1d\xb0\x89\xbf\xad\x36\xbd\x5f\x61\x6d\x59\xe7\xaa\x13\xf3\x7f\x7a\xfa\x8c\xf4\xd4\x77\xd9\x3f\x81\xa5\xc8\x9b\xab\xeb\x0f\x9f\xce\xae\xef\xbe\x5f\xbe\xbf\x1b\x92\x2d\x45\xd4\xfd\x78\x3c\xb2\x58\x54\x5b\xb3\x42\x12\x27\xd8\xdd\x1f\x11\xbc\x1e\xa5\x4f\xf1\x7c\xe0\x49\x1a\xa7\x57\x9b\x35\xc2\xe2\x88\xc9\x6f\xd9\x40\x85\xb0\x7f\x2f\x44\xd4\x24\xee\x59\xe5\x89\x2f\x6a\x53\x26\x29\x12\x62\x06\x31\x5b\x4e\x5f\xe0\x93\x28\x6f\xa9\xb2\x4c\x37\xc5\x4f\x9a\x01\x73\xce\x54\xf8\xff\x81\xa6\x6d\xea\x20\x66\x6a\x9e\xaf\x9b\x72\x8e\x3c\x07\x31\x13\x39\x33\x4d\xf9\x1d\x35\x34\xc3\xae\x0e\x61\x7e\x07\x00\x00\xff\xff\xca\x71\x8a\xd3\x14\x05\x00\x00"

func mysqlTypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlTypeGoTpl,
		"mysql.type.go.tpl",
	)
}

func mysqlTypeGoTpl() (*asset, error) {
	bytes, err := mysqlTypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.type.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _oracleForeignkeyGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x4b\xcb\x2f\x4a\xcd\x4c\xcf\xcb\x4e\xad\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x36\x39\xe8\x59\x1a\x00\x00\x00"

func oracleForeignkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_oracleForeignkeyGoTpl,
		"oracle.foreignkey.go.tpl",
	)
}

func oracleForeignkeyGoTpl() (*asset, error) {
	bytes, err := oracleForeignkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "oracle.foreignkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _oracleIndexGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\xcb\xcc\x4b\x49\xad\xd0\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\xf7\x1c\xbf\x69\x15\x00\x00\x00"

func oracleIndexGoTplBytes() ([]byte, error) {
	return bindataRead(
		_oracleIndexGoTpl,
		"oracle.index.go.tpl",
	)
}

func oracleIndexGoTpl() (*asset, error) {
	bytes, err := oracleIndexGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "oracle.index.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _oracleQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x62\x80\xb5\x05\x15\x00\x00\x00"

func oracleQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_oracleQueryGoTpl,
		"oracle.query.go.tpl",
	)
}

func oracleQueryGoTpl() (*asset, error) {
	bytes, err := oracleQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "oracle.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _oracleQuerytypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\x2c\xa9\x2c\x48\xd5\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x88\x80\x86\xba\x19\x00\x00\x00"

func oracleQuerytypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_oracleQuerytypeGoTpl,
		"oracle.querytype.go.tpl",
	)
}

func oracleQuerytypeGoTpl() (*asset, error) {
	bytes, err := oracleQuerytypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "oracle.querytype.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _oracleTypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x51\x6f\xdb\x36\x17\x7d\x96\x01\xff\x87\x5b\xe1\x03\x22\xe7\x73\x25\xec\xd5\x80\x1f\xba\x46\xdd\x82\x65\x4e\x91\x38\x5b\xdf\x62\xda\xbc\xaa\xb9\x48\xa4\x43\x52\x6e\x0c\x41\xff\x7d\x20\x29\x29\x92\xad\x3a\x36\xb2\x87\x4a\x35\x45\x1e\x9e\x7b\x79\xcf\xe1\x4d\x51\x7c\x84\xff\xa9\xb5\x90\x1a\x26\x53\x08\xec\xff\x38\xc9\x10\xc2\x99\x79\xfa\x28\xa5\x0f\xbe\x44\xe5\x83\xaf\x9e\x53\xa5\xcd\x4f\xba\xf4\xc1\xff\x76\x7b\x23\xbe\xfb\x23\xf8\x58\x96\xc3\x81\x85\xd1\x64\x99\xa2\x83\x59\xad\x31\x23\x10\xde\x57\xef\xb9\xf9\xe2\x9e\x06\xb6\xb5\x88\x25\x10\x7e\x16\x59\x86\x5c\xbb\xc1\x28\x82\xa2\x78\x1d\xab\xe7\x61\xaa\xb0\x33\xc1\xd2\x2b\x4b\x90\xb8\x91\xa8\x90\x6b\x05\x04\xa4\xf8\x01\x89\x14\x19\x5c\x14\x45\xcd\xa7\x2c\x2f\xc2\x0a\x83\x53\x8b\xa7\x77\x1b\xec\x60\x28\x2d\xf3\x95\x86\xc2\x4d\x93\x84\x7f\x47\x08\xbf\x30\x4c\xa9\xb2\x0b\xbc\xf6\xe4\xa2\x00\x89\x16\x22\x9c\x9b\x67\x59\xc2\xe2\x1f\x25\xf8\xc4\x77\xbc\x53\xf3\x2f\xcf\x78\x35\xdf\x5f\x40\x13\xd2\xde\xa7\x2e\xab\x3a\x1b\x5f\x25\xcb\x88\xdc\xfd\x81\x3b\x3b\x3c\x1c\x78\x51\x04\x2f\x02\x12\xcb\x67\x38\xf0\x1e\xf1\x85\x29\xad\xc6\xf0\x48\x31\x45\x8d\x14\x96\x42\xa4\x06\xa0\xc1\xb2\xeb\x8a\xa2\x0f\x2f\x8a\x20\xb6\xeb\x81\xa2\x46\x99\x31\x8e\xca\xcc\xd3\xeb\x6e\x4e\xdc\x26\xc0\xb8\xfd\x42\x89\x26\x4b\xa2\x30\x1c\x0e\x92\x9c\xaf\x20\x30\xf9\x75\x65\x53\x96\x70\xd9\x5a\x38\xaa\xe0\x83\x91\xa5\x65\x92\xea\x49\xd4\xb9\xe4\xd0\x5e\x13\x56\x51\x54\x5c\xa3\x08\xae\xaa\x60\x36\x52\x6c\x19\x35\xa4\x78\x22\x64\x46\x34\x13\xbc\x8f\xe0\x9a\x28\x58\x22\x72\xa8\xb3\x60\x0f\xfe\x5c\xb2\xd5\xae\x6f\xb2\xad\x36\x79\xa5\x7b\xcd\x15\x4a\x0d\xcc\xbe\xd4\x01\x3b\x2d\xce\xa6\xe2\x10\x03\xba\x84\x6f\xb7\x57\xbf\x8e\x00\xa5\x14\xd2\x32\xda\x12\x69\x7e\xb9\x91\xba\x24\x58\x02\x24\x95\x48\xe8\xce\x9d\xd5\x18\x96\x84\xa5\xc3\x81\xc7\x92\xde\x4c\x5b\xa4\x3a\x38\x8b\xa4\xc2\x19\xfe\x08\x7c\x17\x02\x24\x84\xa5\x48\x27\x5d\x50\xe5\x8f\x86\x03\xaf\x29\x43\xf5\x9c\xc2\x73\x8e\x72\x37\x1c\x78\x2b\xc1\x95\x06\xe7\x09\x30\x85\xc5\xf5\xec\x3e\xbe\x9b\xc3\xf5\x6c\x7e\x0b\x6d\xf5\x41\xb0\x80\xff\x9b\xad\x17\x45\x01\x2b\x91\x1a\x77\x51\x8d\xbc\x5a\xe5\x59\x67\xa2\x9e\x3e\x82\xbf\x3e\xdd\x3c\xc4\xf7\xfb\x00\x5b\x92\x9e\xb8\xfe\x2e\x9e\x3f\xdc\xcd\xae\x67\xbf\xc1\xeb\xd6\x9d\x15\x9f\x45\x6a\x18\x46\x97\x29\x51\xda\xe5\xff\x9a\x5e\x46\x2e\x88\xc9\xe6\x69\x51\x07\x2e\x73\xde\x04\x6e\x8d\x2f\x70\x81\x8f\x0d\xb2\x55\x66\x37\xac\x2a\xfb\x3d\xec\xc6\xc0\x59\x3a\xb2\x65\xa6\xc6\xf6\x54\x27\x53\xa0\xcb\x30\x7e\xc1\xd5\xfb\x41\x59\x62\x21\x3f\x4c\xcd\xc0\xfe\x89\xb7\x4f\x52\xa2\x96\x0c\xb7\x08\x8c\x9a\x65\xb4\xa1\x22\x51\x85\x37\xad\x6c\x04\x67\xc1\x2a\xd4\xb0\x71\xf4\xe0\x09\x77\x40\x38\x75\x85\x84\x7c\x85\xce\x48\x5f\x0b\xd3\x54\xff\x61\x2c\x30\x85\xbd\x0f\x95\xcd\x06\x8c\x8e\xf6\x21\xea\xda\x9e\x82\x96\x39\x5a\x16\x15\x31\x6e\xb4\xd0\xf2\x41\x8e\x10\x9c\x9e\xd3\x11\xf8\xbe\xb3\xfe\x28\x82\x87\x0d\x25\x1a\x21\xb7\xaf\x43\xa9\x1f\x5a\xa4\xf7\xa6\xd6\x1d\x64\x9f\xd6\x7b\xc4\x5e\xa9\x9d\x0a\x54\xfc\x42\xef\xa9\xdd\x9c\xcd\x87\x9f\xeb\xbd\x4f\xf0\x2e\x90\x46\xf0\x06\x17\xb8\xa8\x80\xad\xe0\xab\x03\xad\x37\x76\xde\xd7\xd9\xb2\xd7\x1d\x4f\xde\x32\x23\xf2\xc9\x38\xb6\x90\x0e\x9c\x09\xbe\xbf\x6f\xdb\x6a\x0e\xbc\xe6\xe1\xeb\xd5\xa7\x79\xdc\xb5\x99\xfb\x78\x0e\x95\xf4\x3b\x56\x63\x41\x9a\xf3\xf6\xc7\xe0\x1f\x31\x0d\x6f\x01\x7f\xff\x1e\xdf\xc5\x6f\x18\xc6\x14\x26\x6e\xc2\x4a\xe4\x5c\x1f\x35\xa3\x26\xa0\xb6\x85\xbc\xdb\x43\x4e\xd0\x91\xcd\xe7\xa3\xd3\xf5\x7f\xe1\x30\xa7\x6e\xd9\x6f\x0c\xf7\x64\x8b\xa0\xc8\xb6\x47\x3f\x87\x57\xe5\xdb\xfa\x31\x70\xbd\xea\xd9\x2f\xcd\xa6\x19\xe9\x94\x66\x67\x4a\xa3\xc5\x76\x05\xf6\x4d\x6c\x2e\xe8\xea\x4e\x34\x0d\x97\x69\x4b\xf7\x7c\x42\x69\xa2\x31\xb3\x1d\xa9\xc8\x98\x36\xba\xa0\x39\x9a\x30\x53\xb2\x7a\x02\x91\x54\xad\x1c\x08\xbd\x46\x09\x7a\x4d\x78\xdb\x33\x3b\x8d\x5c\xab\x33\xaa\x64\x78\x98\xbf\x77\xf4\x3d\xe7\x34\x1b\xfd\xf6\x73\xdc\x7d\xda\x5e\xfc\x5a\x0b\x3d\x96\x72\xdc\x51\xfa\x61\x8e\x35\x23\x57\xf1\x4d\x3c\x8f\xe1\xcb\xdd\xed\x9f\x5d\x97\x38\x51\xdd\xbf\x9c\x76\xf3\x9f\x22\x88\x63\x12\x3c\x65\xfd\x59\x77\x6f\xd3\xa6\x7a\xfd\xe9\xfc\xf9\x3d\xd9\xfe\x53\x64\x38\xf8\x37\x00\x00\xff\xff\xa6\xad\xb9\xa9\x17\x0e\x00\x00"

func oracleTypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_oracleTypeGoTpl,
		"oracle.type.go.tpl",
	)
}

func oracleTypeGoTpl() (*asset, error) {
	bytes, err := oracleTypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "oracle.type.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresEnumGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6a\xdc\x30\x10\x3d\xdb\xe0\x7f\x98\x8a\x42\xec\x90\x78\xe9\xa5\x87\xc0\x9e\x4a\x8f\xcd\xa1\x69\x73\x29\x3d\x68\xbd\xa3\xac\x88\x2d\x37\x92\xbc\x49\x30\xfa\xf7\xa2\x91\xdc\x4a\xdb\x0d\x6d\x0a\x7b\x59\xcc\x68\xf4\xf4\xe6\xbd\x37\xec\x3c\x5f\xc2\x5b\xfb\xfc\x03\xe1\x6a\x0d\xed\x35\x1f\x10\x2e\x9d\xab\x4a\xaa\x9b\xdd\xa8\xad\x3f\xa8\xe9\x4b\xf9\xd3\xd0\xcc\x50\x4d\xc3\x2d\xef\x19\x30\x8b\x4f\x96\x01\xdb\x4c\x82\x01\x1b\xef\x19\x30\xa3\x3b\xd6\x24\x30\x1a\xf7\xa8\x0d\x7a\x70\x43\xcf\x7c\x0e\x85\x0f\xa3\x32\x36\x54\xa9\x79\xb5\x82\x79\x8e\x0f\x38\x07\xd2\x80\xdd\x21\x9c\xcd\x33\xb4\x1f\xd5\x34\xd0\x0f\x31\x74\xee\x0c\x3c\x01\xa0\x56\xa1\xc7\x01\x4c\xb7\xc3\x81\x87\xe6\x9b\xf0\xed\xdb\xda\xaa\xa4\x9e\x14\x77\x92\xca\xbe\x7b\x5f\x95\x55\xd9\x79\x02\x50\x07\x9a\x9a\xab\x3b\x84\xf6\x96\xf7\x13\x1a\xf0\x7c\x8a\x40\x48\x8a\x83\x11\x9c\xf3\xaf\x44\x26\x09\xf2\x3c\x03\xf6\xe6\xcf\x62\xd2\x8a\x6a\x7b\x38\xda\x2d\xef\x69\x32\x7a\x98\x46\x4b\x6e\xb7\x55\x59\x9c\x86\xc2\x3a\x7d\xa6\x5e\x88\x90\x25\x0b\x93\xc6\x0b\x43\xfd\x64\x4f\xe3\x25\x5b\xad\xe0\xc6\x6a\xa9\xee\x40\xa3\x9d\xb4\x0a\x83\x98\x50\xda\xd3\xc5\x51\x50\x2d\x9f\x42\x4c\xaa\x03\xff\x4c\x0c\x95\x73\x69\x43\x13\x41\xeb\x66\x81\x9a\xab\xb2\xd8\x73\x0d\x31\x67\xb1\xec\x19\x14\xe6\x51\xda\x6e\x07\x39\xd6\x8b\x1e\x76\xdc\xe0\x69\x5c\xbc\xaa\xca\xa2\x58\xf8\xad\x81\x1d\x33\x93\xe5\x12\x16\x8e\x26\x08\xd2\x2d\xb3\x55\xa5\x8b\xca\x7e\xe2\xda\xec\x78\xff\x05\x9f\x2c\x0c\xe1\xdb\xe4\x2b\xa1\xec\x08\x7e\xe1\xfe\x41\xd1\x04\xac\x6e\xa0\xfe\xf6\x7d\xf3\x6c\xf1\x02\x50\xeb\x51\x37\xa4\x6f\xa4\x11\x4e\x32\xa4\x76\xb1\xa3\xb9\x00\x25\x13\x86\x5f\xd5\x90\x70\x9c\xd4\x51\x96\xb4\x90\x2f\xb3\x3c\xcf\x68\x66\x88\xb5\xbf\x15\x09\x35\x81\x2a\x31\x8d\x96\x87\x10\x50\x53\x53\xfc\xc5\xf2\xe3\x76\x90\x67\xe7\x19\x9d\xf5\x69\xd2\xf1\xcb\x78\x17\x3c\xdf\xa2\xe0\x53\x6f\x89\xc0\xe2\xbf\x9f\xcf\xb4\xd7\xf8\x58\x33\xa9\xf6\xbc\x97\xdb\x54\x47\xd6\x1c\x06\x26\xb3\x22\xcc\x64\xb8\x95\x46\x48\x8c\x7b\xf8\xd0\xaf\xb6\x5a\xee\x51\x07\x41\xb4\x4f\x0c\x6a\xc1\x3b\x04\xe1\xb5\x7c\xd5\x4e\x12\x84\xcf\x4e\x0a\x79\x2c\x41\x47\xa3\x73\x90\x9c\x9b\x8e\xab\x03\xb6\x5b\x6e\xf9\x86\x1b\x5c\x99\x87\xbe\xf5\xe7\xea\xf5\x84\xf3\x30\x79\x90\xda\xe8\xee\x37\xca\xec\xd2\x1c\x6d\x26\x71\x01\xe3\xbd\xff\x13\x32\xba\x6b\xe3\x52\x78\x9d\xa5\x80\x37\xe3\x3d\x35\x01\xc0\xff\x1a\x94\x09\x91\x27\x7b\x33\x89\x26\xaa\xf1\x33\x00\x00\xff\xff\xa9\x41\xf5\xd0\x74\x07\x00\x00"

func postgresEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresEnumGoTpl,
		"postgres.enum.go.tpl",
	)
}

func postgresEnumGoTpl() (*asset, error) {
	bytes, err := postgresEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.enum.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresForeignkeyGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4b\xc4\x30\x10\x85\xcf\x06\xf2\x1f\xde\x41\xd8\x64\xd9\xed\xde\x05\x2f\xab\xe8\x41\x50\x10\x0f\x5e\xbb\xed\xd4\x16\xb7\x89\x24\xa9\x5a\x42\xfe\xbb\x24\xed\x76\xeb\xd2\x43\x20\x7c\xf3\x66\xe6\xbd\xf1\x7e\x8b\x6b\x5b\x6b\xe3\x70\x73\x0b\x91\x7e\x2a\x6f\x09\xd9\x5b\xff\x45\xd9\x73\xde\x92\xc4\x36\x04\xce\x76\x3b\x78\x8f\x44\x10\x02\x0c\xb9\xce\x28\x0b\x57\x53\xe2\xaf\x54\x4d\x1d\xb1\x9e\x5b\xab\x8b\x26\x77\x54\xe2\xa7\x71\xf5\xa4\x9b\x8b\x56\x36\xa1\x87\x86\x8e\xe5\xd4\x28\xce\xe8\x4e\x1f\xe3\xeb\x5a\x35\x16\x65\x16\x7d\x24\x2f\x8f\xa4\xc8\xa4\xf1\x95\xd1\x2d\x2a\x6d\xa8\xf9\x50\xf8\xa4\x1e\xab\x34\x61\x00\x4f\xd4\xcf\xbe\xa7\xbd\x19\x67\x55\xa7\x8a\xb4\x6b\x4c\x1f\x02\xd6\x97\xfe\xe4\x3c\xb1\x28\x0f\x78\x7f\xb9\xdf\x4b\x88\xf5\x42\xe0\x0d\xc8\x18\x6d\x24\x3c\x67\x57\xc3\x71\x96\xee\xb2\xef\x47\xf8\x2f\xb4\x28\x0f\x9b\xa8\x2e\xb4\xfa\xa6\x5f\x77\xf2\x34\x9c\xe1\x2c\x8f\x96\x38\x0b\x9c\x71\xf6\x17\x00\x00\xff\xff\x59\x1b\xe5\x5b\xb8\x01\x00\x00"

func postgresForeignkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresForeignkeyGoTpl,
		"postgres.foreignkey.go.tpl",
	)
}

func postgresForeignkeyGoTpl() (*asset, error) {
	bytes, err := postgresForeignkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.foreignkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresIndexGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x61\x4f\xdb\x30\x10\xfd\x9c\x48\xf9\x0f\x37\x6b\x82\x74\x2b\xe9\x77\xa4\x7e\xd8\xa0\x6c\xd3\x18\x6c\xc0\x34\x24\x84\x56\x37\xb9\x40\xa4\xd4\x6e\x6c\x07\xa8\x2c\xff\xf7\xe9\xec\x34\x94\x52\x6d\xb0\x2f\xc6\xb1\x7d\xef\xde\xbd\xf7\xa8\xb5\x7b\xf0\x56\xdf\x4a\x65\x60\x7f\x0c\xa9\xdf\x09\x3e\x47\xc8\x2e\x96\x0b\xcc\x4e\x68\xcb\x50\x29\x06\x4c\x37\xb5\x36\xb4\x29\x66\x0c\x58\xc3\x80\x29\xd4\x0c\xd8\xe5\xe9\xb1\xbc\x61\x90\x1d\x55\x58\x17\x7a\x00\x7b\xce\x25\xb1\xc7\x35\x7c\x56\x63\xc0\xcd\x6f\x71\xce\x21\x3b\xef\xfe\x7a\xf0\x0b\xba\x0e\x2b\xf5\xe9\x2a\x47\x23\xb0\x16\xb2\xa3\x56\xe4\xbe\xbb\x73\xa0\xd0\xa8\x0a\xef\x50\x03\x07\x25\xef\xa1\x54\x72\x0e\xbb\xd6\xae\x3a\x38\xb7\x0b\x9c\x2e\xa9\xf0\x91\xb7\x73\x19\xc1\x79\xc8\x4f\x28\x50\x71\x83\x45\x28\xae\x44\x81\x0f\x1e\x22\xfb\x42\xdb\xb0\x76\x55\xbb\x59\x12\x97\xad\xc8\x37\x79\xa4\xc5\x0c\x2e\x4f\x0f\x3f\x5a\x0b\x37\x72\xc1\x15\x9f\xd7\x95\x36\xab\xc1\xc1\xa8\x16\xc3\xe2\xdc\x00\x52\x6b\xa1\x2a\x41\x48\xd3\xb7\xd0\x3f\x45\xd5\xf8\xeb\xab\x6b\x6b\x01\x45\x01\xce\xbd\xdb\xe4\x3c\x04\x54\x4a\xaa\x01\xd8\x24\x8e\xee\xb8\xa2\xcf\x70\x94\xc4\x49\x1c\x8d\x46\xa0\x9b\x1a\x9a\x16\xd5\x32\x89\xa3\x5c\x0a\x6d\x20\x58\x03\x63\x98\x9e\x4f\x8e\x27\x07\x17\x30\x85\xf7\x49\x1c\x45\x53\x6b\x21\x97\x35\x19\xaa\xbb\x2e\x1d\x59\xe7\xfa\x37\x47\x67\xa7\xdf\x60\x5d\xcc\xfe\xe6\xd7\xe7\xc9\xd9\x04\xd6\x30\x7c\xd7\x7e\x60\x06\x1f\x4e\x0e\x81\x81\x73\xd3\x15\x35\xd5\x8a\x9e\x9a\xcf\x45\x1a\xa8\xfd\x4d\xb2\x92\xd7\xda\x6b\x16\x52\x53\x95\x5b\x04\x4b\xe2\x88\x18\x86\xa0\x3a\x47\x99\xda\xd4\xcd\xfa\x37\xa1\xde\x9f\x7f\x57\xd5\x9c\xab\xe5\x57\x5c\x06\x80\xe8\x37\x3e\x54\xda\xe8\x7d\xdf\x76\x18\x20\xc9\x04\x1f\xbb\xc8\xf9\x19\x48\xec\x31\x14\xb3\xec\x07\x4d\x71\x26\xef\x5f\x33\x40\x76\x9e\x73\x41\xc6\x97\x74\xbb\x45\xf5\x74\xa1\x2a\x61\x80\xed\xb0\x6e\x96\x41\x98\x3b\xaa\x4a\x6f\xf3\x9b\x31\x88\xaa\xf6\xce\x47\x0a\x4d\xab\x04\x7d\xfb\x44\xf4\x0c\xbb\xf3\x9d\x75\x3d\x86\xf4\x2c\xc8\x87\x81\x4b\x12\x47\x8d\xaf\x23\xa9\x56\xe3\xbc\xce\x8c\x17\x93\x8a\x0a\x2c\x51\x41\x93\x1d\xd4\x52\x63\x3a\x58\x85\xa1\x96\xbc\x00\x85\xba\xad\x8d\xf6\xc4\x35\x91\xb9\xba\x7e\x16\x79\x4b\x20\xa5\x24\x88\x13\x7c\x30\x69\xc8\xfe\x8b\x1c\xff\x87\xe5\xcf\x3d\x7f\x6a\x7a\xa7\xa9\xff\xaf\xca\xb9\xa0\x6d\x48\x40\xf3\xff\x5e\x6e\xd3\x6d\x8b\x70\xab\xd6\x24\xcb\x18\xf8\x62\x81\xa2\x48\x15\xea\xe1\x53\x6b\x07\x9b\xc6\xfb\x27\x8f\x76\xfb\x1f\x91\x24\xf6\x4f\xfe\x04\x00\x00\xff\xff\xf2\x9f\x01\xf4\xcd\x05\x00\x00"

func postgresIndexGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresIndexGoTpl,
		"postgres.index.go.tpl",
	)
}

func postgresIndexGoTpl() (*asset, error) {
	bytes, err := postgresIndexGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.index.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresProcGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x6b\xdc\x30\x10\x85\xcf\x16\xe8\x3f\x4c\x43\x69\xbc\x90\x78\xef\x85\xbd\xb4\xdd\x5b\x48\xd2\x6c\x28\xb9\x35\x8a\x3c\xde\x08\xb4\xd2\x66\x24\x6f\x1b\x84\xfe\x7b\x19\x59\x9b\x3a\xa1\x2d\xf4\x60\x19\xcb\xf3\xbe\xf7\xe6\xa5\x74\x0e\xef\x9d\x8f\xdf\xbc\xe9\xe1\xe3\x0a\x5a\x87\xd0\x5d\x93\xd7\xdd\x0d\xc6\x91\xdc\xed\xf3\x1e\xe1\xe4\xe0\x4d\x7f\xb2\x80\xf3\x9c\xa5\x28\x8a\x3d\x79\x5d\xc6\x83\x7e\xc4\x9d\x82\x6e\x53\xdf\x45\xca\xc7\xa5\xda\xe1\x4c\x61\x06\xf8\x23\x39\x92\xd9\x6e\x91\x4e\xa6\xc9\xe5\x12\x52\x82\x8e\xb5\x90\x33\x68\x65\x6d\x80\xf8\x88\x10\xa2\x27\xec\x81\x6d\xb1\x1f\x09\xe1\x34\xa5\x9a\x22\xe7\x96\x35\x4c\xbe\x56\xa4\x76\x01\x72\x5e\xc0\xf1\x6a\x6e\x96\xf3\x29\x78\x07\xfd\x43\x27\xc5\x30\x3a\x3d\xf7\x6a\xfb\x07\xb8\xbb\xfa\xf2\x29\x25\xd8\xfa\x3d\x73\xac\x09\x11\xba\x8a\x8c\x34\xe2\x74\x30\x9c\x0d\xcd\xf0\xbb\xb7\x9c\x53\x02\xc2\xc8\x26\xd5\xb0\xab\x8e\x67\x6c\x82\x8e\x67\x90\xc8\xd3\x02\x92\x14\xcd\x41\x11\x20\x95\xc7\x93\x14\x52\x34\xcb\x25\x84\x27\x0b\x4f\x23\xd2\xb3\x14\x8d\xf6\x2e\x44\xbe\x09\x91\x60\x05\xf7\x9b\xf5\xc5\xfa\xf3\x2d\xbc\x59\x5a\x7b\x7b\x50\x36\xbc\xa4\xcc\x79\x71\x7f\xa4\xd1\xe8\x8e\xb4\xda\xff\x2c\x6e\x8d\x40\x18\xe1\xaf\xc9\xa5\x68\xee\xae\x2e\xfc\xb6\x9d\x52\xfc\xab\x98\x41\xd9\x50\x9a\x91\xa2\xe1\xb5\x56\xdc\xf1\x57\x36\xbf\xf1\x3f\xfe\x47\xdf\x6d\xb4\x72\xed\x07\xc2\xc8\x28\x33\x94\x92\xde\xad\xc0\x19\x5b\x7a\x6b\xa8\x44\x9c\x42\x3b\x63\x5f\xe5\xbe\x34\xf6\xa5\x74\x24\x92\xa2\xc9\xa5\x8c\xaa\x21\x8c\x67\x0c\x9a\xfa\xc0\xc9\xf1\xcd\x92\xec\xfa\xbd\xa8\xa7\x1d\xd6\x3f\x51\xcf\x7e\x55\x52\x81\x17\x88\x9b\xca\xcc\xaf\x3f\xa5\xf8\x15\x00\x00\xff\xff\x7f\x4c\x90\x55\x56\x03\x00\x00"

func postgresProcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresProcGoTpl,
		"postgres.proc.go.tpl",
	)
}

func postgresProcGoTpl() (*asset, error) {
	bytes, err := postgresProcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.proc.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xdd\x6a\xdc\x3c\x10\xbd\xb6\xc1\xef\x30\x9f\x58\x82\xfd\xd5\xf1\xde\x07\x7c\xd3\x94\x42\xa1\x64\xfb\x77\x11\x08\x81\x6a\xd7\xf2\xd6\xa0\x95\xd6\x92\x9c\x66\x11\x7a\xf7\x32\x92\x7f\x37\x1b\x4a\x73\x27\x0f\x47\x47\xe7\xcc\x99\xb1\xb5\xd7\xb0\xd2\xbf\xa4\x32\x70\x53\x42\xea\x4f\x82\x1e\x18\x14\x3f\x4e\x47\x56\xdc\xe1\x91\x30\xa5\x08\x10\xdd\x72\x6d\xf0\x50\x6d\x09\x90\x96\x00\x51\x4c\x13\x20\xf7\x9b\xcf\x72\x4f\xa0\xf8\xda\x31\x75\xfa\x42\x15\x3d\xe8\x0c\xae\x9d\x4b\x62\x4f\xde\x62\xf9\x56\x1e\x0e\x4c\x18\x8d\x8f\x04\xe0\x58\x19\x91\x4d\x0d\x45\x5f\x0d\xc5\xf5\x1a\xac\x9d\x6a\x03\x8e\x71\xcd\x16\x00\x2f\xd2\x39\x50\x9d\xd0\x40\x61\xd7\x69\x23\x0f\xe0\xdf\xcd\x41\x31\xd3\x29\xd1\x88\x3d\x28\xa6\x3b\x6e\x34\x50\xed\x6f\x4d\xfe\x9c\x2b\x7a\x66\x51\xf9\x57\xea\x4e\xec\x16\xcc\x69\xb5\x85\xfb\xcd\x87\xf7\xd6\x82\xa2\x62\xcf\x16\x66\xc1\xb9\x7c\x81\x1e\xd8\xc1\x39\x6b\x7b\xd2\x0c\x52\x6b\xd1\xa2\x90\x06\x8a\x8d\xe0\xa7\x8d\x40\xc0\xc3\xe3\x08\xf9\xff\x5c\x55\x0e\x4c\x29\xa9\x32\xb0\x49\x1c\x3d\x51\x85\x9f\xa1\x94\xc4\x49\x1c\xad\xd7\xa0\x5b\x1e\x7c\x26\x71\x14\xe8\x8b\x4f\xc2\x30\x75\x94\x9c\x1a\xa4\x78\xa2\x0a\xf9\xb1\x63\xce\xed\xa4\xd0\x66\x7c\x0e\x42\x9e\x50\xc2\xe8\x6a\xd5\xe4\xb0\xe2\x53\x46\xc1\x40\x53\xc3\xaa\xc1\x0b\xef\xc6\xbb\xa1\x9a\x36\xa2\x62\xcf\xe7\x09\xaf\x9a\x0c\xc1\x21\x9b\x57\x10\xf3\xce\xcc\x5e\xf0\x2e\xb0\x7a\xed\xdc\x4f\x6b\x51\x4b\x38\x0c\xc1\x04\xd7\xaa\x13\xa3\x6b\x3f\x7c\x69\xb0\xf2\x5a\x3a\xb3\xc6\x2f\xbb\xb3\x88\x6d\x2e\xa8\xcf\x6c\x9a\xcb\x29\xb0\x3e\x0a\x54\x17\xd6\x66\x16\xf8\x40\x95\xc4\x11\x46\x55\x42\xb5\x0d\x52\xbe\xc9\xdf\x7f\xd1\x78\x59\x4a\x56\x7c\xdf\x51\x81\x93\x53\x37\x8c\x57\xb8\x98\xba\x7f\xea\x23\x16\x34\xa4\x47\xd5\x08\x03\xe4\x8a\xf4\x7a\xb2\x20\x3c\x6a\x6a\x3f\x2e\xff\x95\x20\x1a\xee\x27\x28\x0a\xab\x80\xdf\x7e\xb2\x92\x38\x0a\x2d\xed\xeb\x57\x73\x4f\x39\xc2\x66\xfb\xe6\x4d\xb5\xfe\x1e\xce\xc7\x60\xec\x6d\xae\xfe\x41\x5e\x54\xb1\x9a\x29\x68\x8b\x5b\x2e\x35\x4b\xb3\x61\x06\xb8\xa4\xd5\xb0\xd1\xde\x82\xff\xb5\x3c\x3c\xbe\x58\x22\x8b\x24\xb5\x44\x8a\x3b\xf6\x6c\xd2\xb0\x4d\xd1\x22\xbf\x9b\xf2\x45\x84\x36\xb4\xc6\x2f\xd9\x8e\x0a\x3c\x86\x48\xdb\xb7\x47\x72\xc9\xf4\x05\xd7\x7d\x2a\xde\x53\x09\xf4\x78\x64\xa2\x4a\x15\xd3\xf9\x32\xa1\xec\x3c\x3f\x0f\x99\x52\xeb\x57\xc6\x43\xfe\x04\x00\x00\xff\xff\x9b\xab\xcf\x10\xe6\x05\x00\x00"

func postgresQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresQueryGoTpl,
		"postgres.query.go.tpl",
	)
}

func postgresQueryGoTpl() (*asset, error) {
	bytes, err := postgresQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresQuerytypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3d\x8a\xc3\x30\x10\x85\xeb\x35\xf8\x0e\xaf\x58\xf0\x6e\x61\xb9\x5f\xd8\x2a\x90\x32\x4d\x7c\x01\xc5\x1e\x27\x06\x49\x36\x92\x4c\x08\xc3\xdc\x3d\xc8\x3f\x49\x5c\x68\x04\xa3\xef\x7d\x7a\xcc\x25\xbe\xa3\xbe\x18\xc2\xdf\x3f\x7e\x42\x73\x23\xab\xa1\xce\xeb\x5d\xa7\x97\x65\x9e\xb4\xa5\x5f\x94\x22\x79\x96\x42\x7d\x07\x75\x18\xac\x25\x17\x97\x65\x55\x81\xf9\xbd\xdb\x38\x32\x81\x76\x40\xf2\x40\x04\x9e\x46\x4f\x81\x5c\x0c\xd0\xf0\xc3\x1d\x9d\x1f\x2c\x0a\xe6\xad\x8f\x48\xa1\x56\x87\x6b\x67\x5f\x7c\x8c\xb4\x73\x84\xe8\xa7\x26\x82\x17\xcc\x6b\x77\x25\xa8\x63\x4f\xa6\x0d\x73\xe0\xeb\x13\x66\x86\xa7\x59\xa1\xea\x34\x45\xf0\xea\x6c\xd2\x99\xac\x5b\xd9\xfd\xb7\x92\x67\x79\xf6\x0c\x00\x00\xff\xff\x17\x45\x45\xf0\x29\x01\x00\x00"

func postgresQuerytypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresQuerytypeGoTpl,
		"postgres.querytype.go.tpl",
	)
}

func postgresQuerytypeGoTpl() (*asset, error) {
	bytes, err := postgresQuerytypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.querytype.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresTypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5f\x73\xe2\x36\x10\x7f\x36\x33\x7c\x87\x3d\xcf\x4d\x0f\x7a\x39\x98\x7b\xe8\x43\x33\xc3\xc3\x35\xf8\xda\x4c\x73\x90\x0b\xa4\xbd\xb7\x43\xe0\x25\xb8\xb1\x25\x22\xc9\x49\x18\x0f\xdf\xbd\x23\xc9\x18\xcb\x08\x30\xb9\xb4\x0f\xb1\x83\xbd\xfb\xd3\x6a\xff\xfc\x76\xe5\x2c\xfb\x00\x6f\xc5\x82\x71\x09\xe7\x3d\x68\xe9\xff\x28\x49\x10\x3a\x03\x75\xf5\x91\x73\x1f\x7c\x8e\xc2\x07\x5f\x3c\xc4\x42\xaa\x9f\xe1\xd4\x07\xff\xdb\xf0\x8a\xdd\xf9\x6d\xf8\xb0\x5e\x37\x1b\x1a\x46\x92\x69\x8c\x06\x66\xb6\xc0\x84\x40\x67\x94\xdf\xc7\xea\x8d\xb9\x2a\xd8\x92\x52\x34\x87\xce\x05\x4b\x12\xa4\xd2\x3c\xec\x76\x21\xcb\xb6\xcf\x36\x72\x18\x0b\xb4\x04\xb4\x79\xeb\x35\x70\x5c\x72\x14\x48\xa5\x00\x02\x9c\x3d\xc1\x9c\xb3\x04\xde\x65\xd9\xc6\x9e\xf5\xfa\x5d\x27\xc7\xa0\xa1\xc6\x93\xab\x25\x5a\x18\x42\xf2\x74\x26\x21\x33\x62\x9c\xd0\x3b\x84\xce\xe7\x08\xe3\x50\x68\x05\xaf\x2c\x9c\x65\xc0\x51\x43\x74\xc6\xea\xba\x5e\xc3\xe4\x1f\xc1\xe8\xb9\x6f\xec\x8e\xd5\x5f\x9a\xd0\x5c\xde\x9f\x40\xb1\xa5\xca\x2b\xdb\xaa\x8d\x37\xae\x79\x94\x10\xbe\xfa\x13\x57\xfa\x71\xb3\xe1\x75\xbb\xf0\xcc\x60\xae\xed\x69\x36\xbc\xef\xf8\x1c\x09\x29\xce\xe0\x7b\x88\x31\x4a\x0c\x61\xca\x58\xac\x00\x0a\x2c\xad\x97\x65\x2e\xbc\x6e\x17\x02\xad\x0f\x21\x4a\xe4\x49\x44\x51\x28\x39\xb9\xb0\x7d\x62\x16\x81\x88\xea\x37\x21\x91\x64\x4a\x04\x76\x9a\x8d\x79\x4a\x67\xd0\x52\xfe\x35\x69\xb3\x5e\xc3\xcf\x25\xc5\x76\x0e\xdf\x6a\x6b\xb3\x94\x53\x3d\x8e\x32\xe5\x14\xca\x3a\x9d\x7c\x17\xb9\xad\xdd\x2e\xf4\xf3\xcd\x2c\x39\x7b\x8c\x42\x65\x14\x9d\x33\x9e\x10\x19\x31\xea\x32\x70\x41\x04\x4c\x11\x29\x6c\xbc\xa0\x03\x7f\xaa\xb1\xf9\xaa\x47\xad\xcd\x17\xd9\x9a\x7b\x49\x05\x72\x09\x91\xbe\x89\x1d\xeb\x24\x3b\xd9\x14\x83\xd8\x0a\xa7\xf0\x6d\xd8\xff\xad\x0d\xc8\x39\xe3\xda\xa2\x47\xc2\xd5\x2f\xf3\x64\x93\x12\xd1\x1c\x48\xcc\x91\x84\x2b\x13\xab\x33\x98\x92\x28\x6e\x36\xbc\x68\xee\xf4\xb4\x46\xda\x6c\x4e\x23\x89\xce\x00\x9f\x5a\xbe\xd9\x02\xcc\x49\x14\x63\x78\x6e\x83\x0a\xbf\xdd\x6c\x78\xe5\x74\x32\xa5\xfc\x85\xd0\x94\xc4\xd7\xf7\xa6\x3c\xba\x5d\x10\x0f\x71\xee\x0b\x78\x48\x91\xaf\xce\x60\x69\xf2\x0e\xee\x71\x05\x49\x2a\x24\x4c\x71\x13\xdb\xb0\xd9\xf0\x66\x8c\x0a\x09\x86\x52\xa0\x07\x93\xcb\xc1\x28\xb8\x19\xc3\xe5\x60\x3c\x84\x72\xf1\x42\x6b\x02\xef\x95\xe5\x93\x2c\x83\x19\x8b\x15\x39\x89\x52\x75\x6e\xde\xb6\xe1\xaf\x4f\x57\xb7\xc1\xa8\x2a\xff\x48\x62\xa7\xf8\x64\xe3\x47\x9e\x52\x63\x72\xb3\xe1\x69\x4e\x6b\x19\xa3\xce\x94\x19\xba\xe8\xec\x25\x0b\xc7\x2a\xcf\xa8\xa8\xf4\x20\x9c\x76\xbe\x2a\x84\x1b\xf6\x54\x5b\xb9\x33\x9a\x11\xda\xfa\xc9\x8a\x94\x4a\x87\x6d\xb9\x16\x99\x61\x62\xaa\x96\x7a\xd3\x03\x1a\xc5\xd5\x48\x9a\x08\xa9\xf2\x57\x24\x59\x2f\x22\x9b\x48\xc0\x74\x05\x02\x1f\x52\xa4\x33\x7c\xb5\xa8\x38\x36\x71\x52\x98\x0e\xea\xdf\x04\xe3\xdb\x9b\xc1\xe5\xe0\x77\xd8\x2e\x6d\x69\x5c\xb0\x58\x29\xfc\x60\x7c\xf7\x04\xe2\x85\x01\x77\xa1\xfd\x27\x19\x90\x37\x80\x3c\x05\x50\x9a\x32\xce\xa3\xeb\xa4\x85\x1e\x48\x9e\xa2\x56\xc9\x01\xa9\xa2\x91\x52\xcd\x53\x84\xd6\x76\x6b\x49\x1a\xcb\xe8\xc0\xfe\xcc\x8b\x36\xf8\x7e\x91\x8a\xb7\xcb\x90\x48\x84\x54\xdf\x76\xb9\x72\xb7\xc7\x78\x47\xc9\xd2\x40\xba\xc8\xd2\xc1\x96\x39\x5d\x86\x0c\x05\x7d\x27\x2b\x74\xa9\x3c\xfb\x66\x3f\x61\xba\x18\xd3\x6c\xa4\x60\x4c\x85\x0b\x94\xe5\xc0\x9a\x31\x0d\x65\x16\x0b\x9b\xe6\x61\x2d\xe9\x6c\x2f\xb5\x97\x4c\x08\xbf\x57\x2d\x8f\x71\x03\x1e\x31\x6a\xad\x6b\x02\x77\x27\xa1\x05\x31\xd2\xdd\xf0\x40\x1b\x3e\x9a\xf0\x78\x1b\xae\xd0\x35\x02\x4f\x91\x5c\xc0\x8c\x25\x4b\x26\x22\x89\x65\xca\xd0\xb2\x55\x7e\xb8\xbd\xee\x7f\x1a\x07\x36\x35\x8c\x82\x71\x51\xdd\x36\x41\xd8\xa9\xb3\x6b\x54\x51\xe6\xba\xd0\x7b\xd0\x82\x2a\x8c\xa2\x89\xd3\x50\xfe\xfe\x23\xb8\x09\x4a\x54\x21\xf4\x3e\x73\x8c\x1d\x5d\x1f\x3e\x0d\xfa\xe0\x43\xeb\x0e\xa5\x90\x84\xcb\x19\x4b\xa9\xdc\xbf\x58\x5b\x57\xe3\x86\x6d\xbc\x2a\xdf\x78\x87\x18\xa7\x5e\x21\xc1\x7a\xbd\xc3\x2d\x3b\x32\x46\xd9\x10\x85\xe7\x7d\x3f\x83\x82\xa6\x82\x67\x9c\xfd\xbf\xcb\x5b\xac\xe4\x15\xb3\xbb\x23\xd9\x5e\x21\xa3\x6a\xb4\x8c\x83\xb9\x54\x57\xbf\x9a\x45\x8e\x86\x03\x3d\x78\x6b\x04\xf6\xe6\x4c\x81\xfc\x82\x6c\xa9\xd1\x51\xce\xa0\x66\x2f\xa9\x9b\x22\xaf\xbb\xa6\x23\x31\xf2\x6e\xe5\x15\x1d\x6b\x44\x1e\x11\x04\x79\x74\x74\x89\xdd\x89\xfa\x78\x97\x50\x70\xce\x1e\x51\x25\xe0\xe2\xcc\x62\x11\xb0\x25\x52\x74\x9c\x32\xcf\xba\x04\x8b\x39\xbe\x5d\xde\xd9\xed\x52\x8f\x62\x4b\xe4\xea\x54\x23\x80\x50\x48\xcd\x23\x45\xe2\x25\xab\x3b\x5a\xde\x28\x0d\x86\xe3\xe0\x1c\xae\x99\x90\x77\x1c\x47\x5f\xaf\xe0\xd7\xce\x2f\xef\x81\xd1\x78\x55\xaf\x47\xee\x3b\x50\xec\xef\x91\xee\x23\xc5\xe1\x33\xc5\xcb\x0e\x15\xa5\x16\x69\x31\xc2\xc9\x23\xe8\x91\x93\x81\x63\xe6\x3c\x7c\x36\x50\x0a\xc3\x01\x5c\x0c\x07\x9f\xaf\x2e\x2f\xc6\xda\xc5\x5b\x78\x07\x41\xb6\xa1\x3f\x84\x9c\xb7\x2c\xaa\x3a\x6e\x58\x6f\x47\x78\xc9\x71\x1e\x3d\xdb\x2a\x7e\xf0\xed\xe2\xea\xb6\x1f\xf4\x7d\x4b\x7b\x52\x38\xd0\x62\x91\x93\x0f\x31\x2f\x64\x83\x5c\xd9\x31\x98\x56\x4a\xbd\x14\xe8\xca\x40\x7a\x74\x22\xad\x8e\xa4\xd5\x43\x4e\x3e\x59\x0a\x49\x24\x26\xfa\x23\x10\x4b\x22\xa9\x26\xa9\x30\x45\x45\x19\x31\x99\xdd\x03\x9b\xe7\x5f\x4f\x80\xc9\x05\x72\x90\x0b\x42\xed\xd1\xc6\x1a\x9d\x8b\x8f\x11\xf9\xe0\xb6\xcb\x45\x3f\xf0\xa9\xe1\x94\xf3\xbd\x7b\x60\x3d\x3c\xaf\x96\x1d\xb6\x65\x1f\xc7\x10\x7a\x78\x06\x75\xc0\x9c\x30\x53\x9e\x30\x52\x56\xcb\xbd\x1f\x5c\x05\xe3\x00\x3e\xdf\x0c\xbf\xd8\xe5\xbe\x67\x92\x3b\x30\xc4\x15\x8d\xf6\xa4\x0a\xd9\x33\xdd\x9c\x5a\x2b\x47\x60\x6a\x55\x4d\x75\x7a\x3a\x46\x95\x7b\x7d\x57\x73\x7c\xf9\x58\xd7\x5f\xb5\x1a\xfe\x21\x4f\xd5\x02\x38\xc1\x47\x3b\xc7\xde\xe2\x7b\x9d\xe7\x4e\xf2\xfd\xa7\x5e\x1b\xef\xdf\x00\x00\x00\xff\xff\x2e\xbd\x3b\xee\x20\x17\x00\x00"

func postgresTypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresTypeGoTpl,
		"postgres.type.go.tpl",
	)
}

func postgresTypeGoTpl() (*asset, error) {
	bytes, err := postgresTypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.type.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3ForeignkeyGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x4b\xcb\x2f\x4a\xcd\x4c\xcf\xcb\x4e\xad\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x36\x39\xe8\x59\x1a\x00\x00\x00"

func sqlite3ForeignkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3ForeignkeyGoTpl,
		"sqlite3.foreignkey.go.tpl",
	)
}

func sqlite3ForeignkeyGoTpl() (*asset, error) {
	bytes, err := sqlite3ForeignkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.foreignkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3IndexGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\xcb\xcc\x4b\x49\xad\xd0\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\xf7\x1c\xbf\x69\x15\x00\x00\x00"

func sqlite3IndexGoTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3IndexGoTpl,
		"sqlite3.index.go.tpl",
	)
}

func sqlite3IndexGoTpl() (*asset, error) {
	bytes, err := sqlite3IndexGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.index.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3QueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\xd4\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x62\x80\xb5\x05\x15\x00\x00\x00"

func sqlite3QueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3QueryGoTpl,
		"sqlite3.query.go.tpl",
	)
}

func sqlite3QueryGoTpl() (*asset, error) {
	bytes, err := sqlite3QueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3QuerytypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x2f\x2e\x49\x2f\x4a\x2d\xd6\x2b\x2c\x4d\x2d\xaa\x2c\xa9\x2c\x48\xd5\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x88\x80\x86\xba\x19\x00\x00\x00"

func sqlite3QuerytypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3QuerytypeGoTpl,
		"sqlite3.querytype.go.tpl",
	)
}

func sqlite3QuerytypeGoTpl() (*asset, error) {
	bytes, err := sqlite3QuerytypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.querytype.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3TypeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xad\x2c\x2e\xcc\xd1\x2b\xa9\x2c\x48\xd5\x4b\xcf\xd7\x2b\x29\xc8\x01\x04\x00\x00\xff\xff\x51\x02\x91\x6a\x11\x00\x00\x00"

func sqlite3TypeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3TypeGoTpl,
		"sqlite3.type.go.tpl",
	)
}

func sqlite3TypeGoTpl() (*asset, error) {
	bytes, err := sqlite3TypeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.type.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _xo_dbGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func xo_dbGoTplBytes() ([]byte, error) {
	return bindataRead(
		_xo_dbGoTpl,
		"xo_db.go.tpl",
	)
}

func xo_dbGoTpl() (*asset, error) {
	bytes, err := xo_dbGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "xo_db.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _xo_packageGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x0d\xc2\x30\x10\x85\xe1\xfe\xa6\x78\x5d\xa0\xb1\x87\x60\x01\x24\x26\x38\x9c\x47\x12\xa1\xf8\x2c\xfb\x0a\x22\xcb\xbb\x53\xa0\x74\x54\xff\x57\xfd\x31\xe2\xae\xe9\xad\x0b\xd1\x3b\xc2\xe9\x31\x90\x2c\xbb\x6e\xb9\xc1\x57\xc2\x8f\xc2\x86\x97\x55\xb4\xb4\x72\x57\x4c\xbd\x9f\x0c\x8f\x5f\xc7\x98\x82\x94\xbf\x33\x91\x18\x71\xb3\x99\x58\x98\x59\xd5\x39\xe3\x79\xe0\x63\x41\x64\xdb\x8b\x55\xc7\xe5\x2a\xf2\x0d\x00\x00\xff\xff\x40\xf9\x7b\xbf\x8d\x00\x00\x00"

func xo_packageGoTplBytes() ([]byte, error) {
	return bindataRead(
		_xo_packageGoTpl,
		"xo_package.go.tpl",
	)
}

func xo_packageGoTpl() (*asset, error) {
	bytes, err := xo_packageGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "xo_package.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"mssql.foreignkey.go.tpl":    mssqlForeignkeyGoTpl,
	"mssql.index.go.tpl":         mssqlIndexGoTpl,
	"mssql.query.go.tpl":         mssqlQueryGoTpl,
	"mssql.querytype.go.tpl":     mssqlQuerytypeGoTpl,
	"mssql.type.go.tpl":          mssqlTypeGoTpl,
	"mysql.enum.go.tpl":          mysqlEnumGoTpl,
	"mysql.foreignkey.go.tpl":    mysqlForeignkeyGoTpl,
	"mysql.index.go.tpl":         mysqlIndexGoTpl,
	"mysql.proc.go.tpl":          mysqlProcGoTpl,
	"mysql.query.go.tpl":         mysqlQueryGoTpl,
	"mysql.querytype.go.tpl":     mysqlQuerytypeGoTpl,
	"mysql.type.go.tpl":          mysqlTypeGoTpl,
	"oracle.foreignkey.go.tpl":   oracleForeignkeyGoTpl,
	"oracle.index.go.tpl":        oracleIndexGoTpl,
	"oracle.query.go.tpl":        oracleQueryGoTpl,
	"oracle.querytype.go.tpl":    oracleQuerytypeGoTpl,
	"oracle.type.go.tpl":         oracleTypeGoTpl,
	"postgres.enum.go.tpl":       postgresEnumGoTpl,
	"postgres.foreignkey.go.tpl": postgresForeignkeyGoTpl,
	"postgres.index.go.tpl":      postgresIndexGoTpl,
	"postgres.proc.go.tpl":       postgresProcGoTpl,
	"postgres.query.go.tpl":      postgresQueryGoTpl,
	"postgres.querytype.go.tpl":  postgresQuerytypeGoTpl,
	"postgres.type.go.tpl":       postgresTypeGoTpl,
	"sqlite3.foreignkey.go.tpl":  sqlite3ForeignkeyGoTpl,
	"sqlite3.index.go.tpl":       sqlite3IndexGoTpl,
	"sqlite3.query.go.tpl":       sqlite3QueryGoTpl,
	"sqlite3.querytype.go.tpl":   sqlite3QuerytypeGoTpl,
	"sqlite3.type.go.tpl":        sqlite3TypeGoTpl,
	"xo_db.go.tpl":               xo_dbGoTpl,
	"xo_package.go.tpl":          xo_packageGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"mssql.foreignkey.go.tpl":    &bintree{mssqlForeignkeyGoTpl, map[string]*bintree{}},
	"mssql.index.go.tpl":         &bintree{mssqlIndexGoTpl, map[string]*bintree{}},
	"mssql.query.go.tpl":         &bintree{mssqlQueryGoTpl, map[string]*bintree{}},
	"mssql.querytype.go.tpl":     &bintree{mssqlQuerytypeGoTpl, map[string]*bintree{}},
	"mssql.type.go.tpl":          &bintree{mssqlTypeGoTpl, map[string]*bintree{}},
	"mysql.enum.go.tpl":          &bintree{mysqlEnumGoTpl, map[string]*bintree{}},
	"mysql.foreignkey.go.tpl":    &bintree{mysqlForeignkeyGoTpl, map[string]*bintree{}},
	"mysql.index.go.tpl":         &bintree{mysqlIndexGoTpl, map[string]*bintree{}},
	"mysql.proc.go.tpl":          &bintree{mysqlProcGoTpl, map[string]*bintree{}},
	"mysql.query.go.tpl":         &bintree{mysqlQueryGoTpl, map[string]*bintree{}},
	"mysql.querytype.go.tpl":     &bintree{mysqlQuerytypeGoTpl, map[string]*bintree{}},
	"mysql.type.go.tpl":          &bintree{mysqlTypeGoTpl, map[string]*bintree{}},
	"oracle.foreignkey.go.tpl":   &bintree{oracleForeignkeyGoTpl, map[string]*bintree{}},
	"oracle.index.go.tpl":        &bintree{oracleIndexGoTpl, map[string]*bintree{}},
	"oracle.query.go.tpl":        &bintree{oracleQueryGoTpl, map[string]*bintree{}},
	"oracle.querytype.go.tpl":    &bintree{oracleQuerytypeGoTpl, map[string]*bintree{}},
	"oracle.type.go.tpl":         &bintree{oracleTypeGoTpl, map[string]*bintree{}},
	"postgres.enum.go.tpl":       &bintree{postgresEnumGoTpl, map[string]*bintree{}},
	"postgres.foreignkey.go.tpl": &bintree{postgresForeignkeyGoTpl, map[string]*bintree{}},
	"postgres.index.go.tpl":      &bintree{postgresIndexGoTpl, map[string]*bintree{}},
	"postgres.proc.go.tpl":       &bintree{postgresProcGoTpl, map[string]*bintree{}},
	"postgres.query.go.tpl":      &bintree{postgresQueryGoTpl, map[string]*bintree{}},
	"postgres.querytype.go.tpl":  &bintree{postgresQuerytypeGoTpl, map[string]*bintree{}},
	"postgres.type.go.tpl":       &bintree{postgresTypeGoTpl, map[string]*bintree{}},
	"sqlite3.foreignkey.go.tpl":  &bintree{sqlite3ForeignkeyGoTpl, map[string]*bintree{}},
	"sqlite3.index.go.tpl":       &bintree{sqlite3IndexGoTpl, map[string]*bintree{}},
	"sqlite3.query.go.tpl":       &bintree{sqlite3QueryGoTpl, map[string]*bintree{}},
	"sqlite3.querytype.go.tpl":   &bintree{sqlite3QuerytypeGoTpl, map[string]*bintree{}},
	"sqlite3.type.go.tpl":        &bintree{sqlite3TypeGoTpl, map[string]*bintree{}},
	"xo_db.go.tpl":               &bintree{xo_dbGoTpl, map[string]*bintree{}},
	"xo_package.go.tpl":          &bintree{xo_packageGoTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
